name: Build Docker Images for all projects

on:
  push:
    branches: [ test_wf ]
  pull_request:
    branches: [ test_wf ]

jobs:
  build_core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Java 8
        uses: actions/setup-java@v3.10.0
        with:
          distribution: 'temurin'
          java-version: '8'
      - name: Prepare location environments
        run: echo "CORE_LOCATION=`pwd`/core/build/libs" >> $GITHUB_ENV
      - name: Build Core
        uses: gradle/gradle-build-action@v2.4.0
        with:
          build-root-directory: core
          gradle-version: current
          arguments: jar
      - name: Upload core artifact
        uses: actions/upload-artifact@v2
        with:
          name: core_jar
          path: ${{ env.CORE_LOCATION }}/core-1.0.jar
  build_jars:
    strategy:
      matrix:
        service: [ bot ]
    runs-on: ubuntu-latest
    needs: build_core
    steps:
      - uses: actions/checkout@v2
      - name: Prepare location environments
        run: |
          echo "LOCATION=`pwd`/${{ matrix.service }}" >> $GITHUB_ENV
          echo "BUILD_LOCATION=`pwd`/${{ matrix.service }}/build/libs" >> $GITHUB_ENV
          echo "CORE_LOCATION=`pwd`/${{ matrix.service }}/build/libs" >> $GITHUB_ENV
      - name: Download core artifact
        uses: actions/download-artifact@v2
        with:
          name: core_jar
          path: ${{ env.BUILD_LOCATION }}
      - run: ls $BUILD_LOCATION
      - run: ls $CORE_LOCATION
      - name: Set up Java 8
        uses: actions/setup-java@v3.10.0
        with:
          distribution: 'temurin'
          java-version: '8'
      - name: Build
        uses: gradle/gradle-build-action@v2.4.0
        with:
          build-root-directory: ${{ env.LOCATION }}
          gradle-version: current
          arguments: fatJar
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: my-artifact-name
#          path: path/to/artifact

#  build_images:
#    runs-on: ubuntu-latest
#    needs: build_jars
#    steps:
#      - uses: actions/checkout@v2
##      - name: Build File consumer
##        uses: gradle/gradle-build-action@v2.4.0
##        with:
##          build-root-directory: fileConsumer
##          gradle-version: current
##          arguments: jar
##      - name: Build Text consumer
##        uses: gradle/gradle-build-action@v2.4.0
##        with:
##          build-root-directory: textConsumer
##          gradle-version: current
##          arguments: jar
##      - name: Build Torrent client
##        uses: gradle/gradle-build-action@v2.4.0
##        with:
##          build-root-directory: torrent
##          gradle-version: current
##          arguments: jar
##
#      - name: ls
#        run: |
#          ls $CORE_LOCATION
#          ls $DOCKER_FILES_LOCATION
#          cp $CORE_LOCATION/*.jar $BOT_LOCATION/build/libs
#          ls $BOT_LOCATION/build/libs
#
#      # Push images
##      - name: Create Bot image
##        uses: docker/build-push-action@v2.6.0
##        with:
##          context: bot/build/libs
##          file: ./config/dockerfiles/Dockerfile-bot
##          push: true
##          tags: halushko/cinema-bot:1.1,halushko/cinema-bot:latest
##      - name: Create File consumer Image
##        uses: docker/build-push-action@v2.6.0
##        with:
##          context: fileConsumer/build/libs
##          file: ./config/dockerfiles/Dockerfile-file
##          push: true
###          builder: mybuilder
###          platforms: linux/amd64, linux/arm64/v8
##          tags: halushko/cinema-file:1.1,halushko/cinema-file:latest
##      - name: Create Text consumer Image
##        uses: docker/build-push-action@v2.6.0
##        with:
##          context: textConsumer/build/libs
##          file: ./config/dockerfiles/Dockerfile-text
##          push: true
###          builder: mybuilder
###          platforms: linux/amd64, linux/arm64/v8
##          tags: halushko/cinema-text:1.1,halushko/cinema-text:latest
##      - name: Create Torrent client Image
##        uses: docker/build-push-action@v2.6.0
##        with:
##          context: torrent
##          file: ./config/dockerfiles/Dockerfile-torrent
##          push: true
###          builder: mybuilder
###          platforms: linux/amd64, linux/arm64/v8
##          tags: halushko/cinema-torrent:1.1,halushko/cinema-torrent:latest
##          build-args: |
##            CONFIG_DIR=$CONFIG_DIR


#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}